{
    "SchemaDefinition": "RedfishInteroperabilityProfile.v0_9_0",
    "ProfileName": "OCPRackManagerController",
    "ProfileVersion": "1.0.0",
    "Purpose": "Profile for OpenRMC Rack Manager Controller.",
    "OwningEntity": "Open Compute Project",
	"ContributedBy": "Intel Corporation",
	"License": "Creative Commons Attribution-ShareAlike 4.0 International License",
    "ContactInfo": "john.leung@opencompute.org",
    "OwningEntity": "Open Compute Project",
    "Protocol": {
        "MinVersion": "1.0"
    },
    "Resources": {
		"Chassis": {
			"MinVersion": "1.0.0",
			"PropertyRequirements": {
				"Links": {
					"PropertyRequirements": {
						"ComputerSystems": {}
					}
				},
				"Thermal": {
					"ReadRequirement": "Recommended",
          "ConditionalRequirement": [
            {
              "Purpose": "Required if ChassisType are specific values",
              "ReadRequirement": "Mandatory",
              "CompareType": "AnyOf",
              "CompareProperty": "ChassisType",
              "CompareValues": ["RackMount", "Tray", "Sled", "Drawer"]
            }
          ]
        },
				"Power": {
					"ReadRequirement": "Recommended",
          "ConditionalRequirement": [
            {
              "Purpose": "Required if ChassisType are specific values",
              "ReadRequirement": "Mandatory",
              "CompareType": "AnyOf",
              "CompareProperty": "ChassisType",
              "CompareValues": ["RackMount", "Tray", "Sled", "Drawer"]
            }
          ]
			  }
			}
		},
		"ComputerSystem": {
			"MinVersion": "1.0.0",
			"PropertyRequirements": {
				"AssetTag": {
					"WriteRequirement": "Mandatory"
				},
				"SystemType": {},
				"SerialNumber": {},
				"Manufacturer": {},
				"MemorySummary": {
					"PropertyRequirements": {
						"TotalSystemMemoryGiB": {}
					}
				},
				"ProcessorSummary": {
					"PropertyRequirements": {
						"Count": {},
						"Model": {}
					}
				},
				"Model": {},
				"SKU": {
					"ReadRequirement": "Recommended",
					"ConditionalRequirements": [{
						"Purpose": "Either PartNumber or SKU (or both) must be implemented.",
						"CompareProperty": "PartNumber",
						"Comparison": "Absent",
						"ReadRequirement": "Mandatory"
					}]
				},
				"PartNumber": {
					"ReadRequirement": "Recommended",
					"ConditionalRequirements": [{
						"Purpose": "Either PartNumber or SKU (or both) must be implemented.",
						"CompareProperty": "SKU",
						"Comparison": "Absent",
						"ReadRequirement": "Mandatory"
					}]
				},
				"PowerState": {},
				"BiosVersion": {},
				"UUID": {},
				"IndicatorLED": {
					"ReadRequirement": "Recommended",
					"ConditionalRequirements": [{
						"Purpose": "Physical Systems must have a writable Indicator LED",
						"CompareProperty": "SystemType",
						"CompareType": "AnyOf",
						"CompareValues": ["Physical"],
						"ReadRequirement": "Mandatory",
						"WriteRequirement": "Mandatory"
					}]
				},
				"Status": {
					"PropertyRequirements": {
						"State": {},
						"Health": {}
					}
				},
				"Boot": {
					"PropertyRequirements": {
						"BootSourceOverrideEnabled": {},
						"BootSourceOverrideMode": {
							"ReadRequirement": "Recommended"
						},
						"BootSourceOverrideTarget": {},
						"UefiTargetBootSourceOverride": {
							"ReadRequirement": "Recommended",
							"ConditionalRequirements": [{
								"Purpose": "If UEFI mode is selected, must allow for UEFI target.",
								"CompareProperty": "BootSourceOverrideMode",
								"CompareType": "Equal",
								"CompareValues": ["UEFI"],
								"ReadRequirement": "Mandatory"
							}]
						}
					}
				},
				"LogServices": {
					"ReadRequirement": "Recommended"
				},
				"Links": {
					"PropertyRequirements": {
						"Chassis": {},
						"ManagedBy": {}
					}
				}
			},
			"ActionRequirements": {
				"Reset": {
					"ReadRequirement": "Mandatory",
					"Purpose": "Minimal set to allow power on, off and reboot.",
					"Parameters": {
						"ResetType": {
							"ParameterValues": ["ForceOff", "On", "ForceRestart"],
							"ReadRequirement": "Mandatory"
						}
					}
				}
			}
		},
		"ComputerSystemCollection": {
			"PropertyRequirements": {
				"Members": {
					"MinCount": 1
				}
			}
		},
		"EthernetInterface": {
			"MinVersion": "1.1.0",
			"ReadRequirement": "Recommended",
			"PropertyRequirements": {
				"MACAddress": {},
				"SpeedMbps": {},
				"InterfaceEnabled": {},
				"LinkStatus": {},
				"Status": {
					"PropertyRequirements": {
						"Health": {},
						"State": {}
					}
				},
				"HostName": {},
				"FQDN": {},
				"NameServers": {},
				"IPv4Addresses": {
					"PropertyRequirements": {
						"Address": {},
						"SubnetMask": {},
						"AddressOrigin": {},
						"Gateway": {}
					}
				}
			}
		},
		"Manager": {
			"PropertyRequirements": {
				"SerialConsole": {
					"ReadRequirement": "Mandatory",
					"Purpose": "SSH or IPMI-based serial remote console is required.",
					"PropertyRequirements": {
						"ConnectTypesSupported": {
							"Values": [ "SSH", "IPMI"],
							"Comparison": "AnyOf"
						}
					}
				}
			}
		},
		"Power": {
			"ReadRequirement": "Mandatory",
			"PropertyRequirements": {
				"PowerControl": {
					"PropertyRequirements": {
						"PowerConsumedWatts": {},
						"PowerCapacityWatts": {},
						"PowerLimit": {
							"PropertyRequirements": {
								"LimitInWatts": {},
								"LimitException": {}
							}
						}
					}
				}
			}
		},
		"Thermal": {
			"MinVersion": "1.1.0",
			"PropertyRequirements": {
				"Temperatures": {
					"ReadRequirement": "Mandatory",
					"MinCount": 3,
					"PropertyRequirements": {
						"ReadingCelsius": {},
						"PhysicalContext": {
							"Comparison": "AllOf",
							"Values": ["CPU", "Intake", "SystemBoard"]
						},
						"UpperThresholdFatal": {
							"ReadRequirement": "Recommended"
						},
						"UpperThresholdCritical": {
							"ReadRequirement": "Recommended"
						},
						"UpperThresholdNonCritical": {
							"ReadRequirement": "Recommended"
						},
						"Status": {}
					}
				},
				"Redundancy": {
					"ReadRequirement": "IfImplemented",
					"PropertyRequirements": {
						"MemberId": {},
						"RedundancySet": {},
						"Mode": {},
						"Status": {},
						"MinNumNeeded": {},
						"MaxNumSupported": {
							"ReadRequirement": "Recommended"
						}
					}
				}
			}
		},
		"ServiceRoot":{
            "NestedPropertyRequirements":{
                "EventService":{
                    "NestedPropertyRequirements":{
                        "Subscriptions":{
                            "PropertyRequirements":{
                                "@odata.id":{},
                                "@odata.type": {},
                                "Members": {},
                                "Members@odata.count": {},
                                "Name": {}
                            }
                        }
                    }
                }  ,
				"Tasks":{
                    "NestedPropertyRequirements":{
                        "Tasks":{
                            "PropertyRequirements":{
                                "@odata.id":{},
                                "@odata.type": {},
                                "Members": {},
                                "Members@odata.count": {},
                                "Name": {}
                            },
							"NestedArrayRequirements":{
								"Members":{
									"<TASK_ID>":{
										"PropertyRequirements":{
											"@odata.id": {},
											  "@odata.type": {},
											  "EndTime": {},
											  "Id": {},
											  "Messages":{
												  "PropertyRequirements":{
													  
												  }
											  }
										}
									}
								}
							}
                        }
                    }
                },
				"Managers":{
					"PropertyRequirements":{
						"@odata.id":{},
						"@odata.type": {},
						"Members": {},
						"Members@odata.count": {},
						"Name": {}
					},
					"NestedArrayRequirements":{
						"Members":{
							"<AMC>":{
								"PropertyRequirements":{
									"Actions":{}
								}
							}	
						}
					}
				}				
            }
			
			
        }
	}
}